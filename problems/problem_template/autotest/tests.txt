max_cpu_seconds=3

files=problem_template.c

compilers=[['gcc']]

compiler_args=-Wall -Werror -g test_problem_template.c problem_template.c other_files.c -o test_problem_template

command=./test_problem_template

## =================================
## ====== Add test cases here ======
## =================================
## You can find more info about how to format test cases
## at https://github.com/COMP1511UNSW/autotest

1 stdin="5\n0 -> 1\n1 -> 2\n2 -> 3\n3 -> 4\n4 -> 0"

2 stdin="5\n0 -> 1\n1 -> 2\n2 -> 3\n0 -> 4\n4 -> 2"

3 stdin="5\n0 -> 1\n1 -> 2\n2 -> 3\n0 -> 4"

## ================================
## ======== End test cases ========
## ================================

## Below will be the expected output corresponding to each of your
## test cases. You can manually write them, or generate them
## using `autotest --generate_expected_output` using your
## `problem_template/solution/solution_file.c
## See https://github.com/COMP1511UNSW/autotest



### generated by: autotest --generate_expected_output - see https://github.com/COMP1511UNSW/autotest
1 expected_stdout='Has cycle\n'
2 expected_stdout='Has cycle\n'
3 expected_stdout='Does not have cycle\n'